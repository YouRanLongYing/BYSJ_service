// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Net;
using System.Net.Sockets;
using System.Collections;
using System.Collections.Generic;
//using System.Collections.Specialized;
using SimpleJSON;

namespace SimpleService
{
	public class AsyncEventArgs : EventArgs
	{
		/// <summary>
		/// 提示信息
		/// </summary>
		public string _msg;
		public Session _sessions;

		/// <summary>
		/// 是否已经处理过了
		/// </summary>
		public bool IsHandled { get; set; }
		
		public AsyncEventArgs(string msg)
		{
			this._msg = msg;
			IsHandled = false;
		}
		public AsyncEventArgs(Session session)
		{
			this._sessions = session;
			IsHandled = false;
		}
		public AsyncEventArgs(string msg, Session session)
		{
			this._msg = msg;
			this._sessions = session;
			IsHandled = false;
		}
	}
//	/// <summary>
//	/// 自己写的Session
//	/// </summary>
//	class Session :IEnumerable,IDisposable
//	{
//		Dictionary<string,string> _sessions=null;
//
//		public Session()
//		{
//			_sessions=new Dictionary<string, string>();
//		}
//
//		public string this[string index]
//		{
//		set
//			{
//				if(_sessions.ContainsKey(index))
//				{
//					_sessions[index]=value;
//				}
//				else
//				{
//					_sessions.Add(index,value);
//				}
//			}
//		get
//			{
//				if(_sessions.ContainsKey(index))
//				{
//					return _sessions[index];
//				}
//				else
//				{
//					return null;
//				}
//			}
//		}
//
//		public void Clear()
//		{
//			_sessions.Clear();
//		}
//
//		#region IEnumerable implementation
//		public IEnumerator GetEnumerator ()
//		{
//			return _sessions.GetEnumerator();
//		}
//		#endregion
//
//
//		public int Count 
//		{
//			get {
//				return _sessions.Count;
//			}
//		}
//
//		#region IDisposable implementation
//		public void Dispose ()
//		{
//			this.Clear();
//		}
//		#endregion
//	}

}

